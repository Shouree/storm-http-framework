use ui;
use layout;
use progvis:net;
use core:geometry;
use core:io;

/**
 * Dialog for uploading new problems.
 */
dialog UploadDlg {
	layout Grid {
		expandCol: 1;
		Label nameLbl("Name:", HAlign:right, VAlign:center) {}
		Edit name("Name your problem") { colspan: 2; }
		nextLine;
		Label mainLbl("Main program:", HAlign:right, VAlign:center) {}
		Edit mainName("") {}
		Button mainButton("Select...") {}
		nextLine;
		Label implLbl("Implementation:", HAlign:right, VAlign:center) {}
		Edit implName("") {}
		Button implButton("Select...") {}
		nextLine;
		Label refLbl("Reference implementation:", HAlign:right, VAlign:center) {}
		Edit refName("") {}
		Button refButton("Select...") {}
		nextLine;
		Button upload("Upload") { col: 2; }
	}

	Client client;

	// Upload a new problem.
	init(Client client) {
		init("Submit a problem", Size(300, 10)) {
			client = client;
		}

		defaultChoice(upload);
		upload.onClick = &this.done();

		mainButton.onClick = &this.pickMain();
		implButton.onClick = &this.pickImpl();
		refButton.onClick = &this.pickRef();
	}

	void pickMain() {
		unless (f = pickFile())
			return;

		mainName.text = f.format;

		Str title = f.title;
		Str ext = f.ext;

		Url impl = f.parent / (title + "_impl." + ext);
		Url ref = f.parent / (title + "_ref." + ext);
		if (impl.exists())
			implName.text = impl.format;
		if (ref.exists())
			refName.text = ref.format;
	}

	void pickImpl() {
		unless (f = pickFile())
			return;

		implName.text = f.format;
	}

	void pickRef() {
		unless (f = pickFile())
			return;

		refName.text = f.format;
	}

	private Url? pickFile() {
		FileTypes ft("Source code");
		for (k in progvis:program:Program:supportedFiles)
			ft.add("${k}-source", [k]);

		var picker = FilePicker:open(ft);
		if (!picker.show(this))
			return null;

		picker.result;
	}

	void done() {
		// try {
		// 	var req = if (solutionId) {
		// 		NewImprovementRequest(name.text, source, ext, solutionId);
		// 	} else {
		// 		NewProblemRequest(name.text, source, ext);
		// 	};
		// 	client.query(req);
		// 	close(1);
		// } catch (Exception e) {
		// 	showMessage(this, "Error", "Failed to upload the problem: ${e.message}");
		// }
		showMessage(this, "Error", "Not implemented!");
	}
}
