use ui;

/**
 * Object containing callbacks that is called by the system as a response to different things the
 * program is doing. This is used to encapsulate the entire behavior of the front-end depending on
 * its current state.
 *
 * The base class is abstract.
 */
class Callbacks on Ui {
	// Called when something went wrong in the running program.
	void onProgramError(ProgramError error) : abstract;

	// Called when the user performed some action. If the string is recorded, the same sequence can
	// then be played back.
	void onUserAction(Str action) : abstract;
}


/**
 * Default callbacks for the main Progvis window.
 *
 * Simply displays any errors and ignores the user actions.
 */
class DefaultCallbacks extends Callbacks {
	private MainWin window;

	init(MainWin window) {
		init { window = window; }
	}

	void onProgramError(ProgramError error) : override {
		print("Show message: ${error.message}");
		if (error as ThreadError) {
			showMessage(window, "Thread ${error.threadId} crashed", "Thread ${error.threadId} crashed:\n" + error.message);
		} else if (error as DataRaceError) {
			showMessage(window, "Data race found", "You found data races:\n" + error.message);
		} else if (error as DeadlockError) {
			showMessage(window, "Deadlock found", error.message);
		} else {
			showMessage(window, "Program error: " + error.type, error.message);
		}
	}

	void onUserAction(Str action) : override {
		// Nothing we need to do.
	}
}
