use ui;
use layout;
use graphics;
use core:geometry;
use core:io;
use lang:bs:macro;

/**
 * Main window.
 */
window MainWin {
	layout Window draw {}

	private MainPainter painter;

	init() {
		init("Progvis", Size(800, 800)) {}

		draw.painter(painter);
		create();
	}

	void open(Url file) {
		painter.open(file);
	}

	// Called when a thread has reached a new breakpoint.
	private void updateData() {
		// TODO: Update the model as well!
		draw.repaint();
	}
}

class MainPainter extends Painter {
	// The workspace we want to draw.
	private Workspace workspace;

	// The program we're currently executing.
	private Program? program;

	init() {
		init();
		bgColor = Color(0.8, 0.8, 0.8);
	}

	// Open a program.
	void open(Url file) {
		program = Program:load(file);
		if (program) {
			program.onChange = &this.update();
			update();
			program.spawn(program.main);
		} else {
			print("Failed to load ${file}!");
		}
	}

	Bool render(Size me, Graphics g) {
		// TODO: Support navigation?
		workspace.render(Rect(Point(), me), g);
		false;
	}

	// Update the visualization of the data.
	void update() {
		workspace.beginTraversal();

		if (program) {
			for (id, thread in program.threads) {
				workspace.traverse(thread);
			}
		}

		workspace.endTraversal();

		repaint();
	}
}

void main() on Compiler {
	named{progvis}.compile();

	if (url = named{progvis:test2}.url) {
		for (file in url.children) {
			if (file.ext == "bs") {
				MainWin win;
				win.open(file);
				win.waitForClose();
				return;
			}
		}
	}
}
