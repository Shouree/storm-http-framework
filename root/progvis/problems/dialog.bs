use ui;
use layout;
use core:geometry;
use progvis:net;
use core:io;

dialog ProblemsDlg {

	private Painter painter;

	init(Client client) {
		ProblemData data(client);
		data.add("Unsolved", UnsolvedView(client));
		data.add("Solved", SolvedView(client));
		data.add("My problems", OwnView(client));

		init("Problems", Size(500, 400)) {
			painter(data);
		}

		painter(painter);
	}

	Bool onClick(Bool down, Point pt, MouseButton button) : override {
		if (down & button == MouseButton:left) {
			painter.onClick(pt);
		}
		true;
	}

	Bool onMouseVScroll(Point at, Int delta) : override {
		painter.onVScroll(at, delta);
		true;
	}
}


/**
 * Action to take when the ProblemsDlg is closed.
 *
 * The base class does not mean anything at all.
 */
class Action on Ui {}


/**
 * Show a problem, possibly trying to solve it as well.
 */
class SolveProblem extends Action {
	// Which problem to solve.
	Problem problem;

	// Source code.
	Url source;

	init(Problem problem, Url source) {
		init {
			problem = problem;
			source = source;
		}
	}
}


/**
 * Show a solution to a problem.
 */
class ShowSolution extends Action {
	// Which problem is this a solution to_
	Problem problem;

	// Solution to show.
	Str solution;

	// Source code.
	Url source;

	init(Problem problem, Str solution, Url source) {
		init {
			problem = problem;
			solution = solution;
			source = source;
		}
	}
}
