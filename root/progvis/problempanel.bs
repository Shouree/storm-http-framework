use ui;
use core:geometry;

/**
 * A small pop-down panel shown when the user is solving a problem from the server.
 */
class ProblemPanel on Render {
	// Text to draw.
	private Text text;

	// Height of this panel (computed based on contents).
	private Float height;

	init(Str problem) {
		init {
			text("Looking for errors in: " + problem, defaultFont);
		}

		height = text.size.h + 4;
	}

	void render(Rect viewport, Graphics g) {
		Rect pos = pos(viewport);

		{
			Rect t = pos;
			t.p0.y -= 10;
			g.fill(t, Size(6), panelBg);
		}

		// Clip.
		g.push(pos);

		g.draw(text, panelFg, pos.p0 + Size((pos.size.w - text.size.w) / 2, 0));

		g.pop();
	}

	// Called when the mouse is pressed. Returns "true" if it was captured by the panel.
	Bool mouseClicked(Rect viewport, Point pt) {
		false;
	}

	// Compute our position based on the current viewport.
	private Rect pos(Rect viewport) {
		Float w = viewport.size.w;
		Size sz(w * 0.7, height);
		Rect(viewport.p0 + Point((w - sz.w) / 2, 0), sz);
	}
}
