use presentation;
use ui;
use core:geometry;
use core:io;
use graphics;
use layout;
use lang:bs:macro;

Url resUrl() {
	if (u = named{res}.url) {
		u;
	} else {
		Url();
	}
}

presentation Test "Test presentation" {
	Font font("Arial", 32);

	background = SolidFill(white);
	animationTime = 500 ms;

	slide SlideDown false => content "Drawn pictures!" {
		Picture {
			rectangle { id: "a"; size: 10, 20; margin: 10, 10; text: "Hello!"; fillColor: red; }
			rectangle { eastOf: "a", 0; id: "b"; size: 10, 20; margin: 10, 10; text: "World!"; fillColor: green; }

			node { southOf: "b", 5; relativeOrigin: southWest; text: "I am below!"; }
		}
	}

	slide FadeIn => title "Test presentation", "My name here!" {}

	slide FadeIn => content "Testing!" {
		SolidFill green {}
	}

	slide SlideDown false => columns "Two columns!" {
		SolidFill green {}
		SolidFill blue {}
	}

	slide SlideDown true => columns "Text as well!" {
		par "A single long paragraph in this column." {}
		Stack {
			SolidFill green {}
			list ["Second column!", "Contains a list!", "Of nice elements!"] {}
		}
	}

	slide SlideDown false => columns "Various lists..." {
		list ["Unordered list", "Foo", "Bar", "Baz"] {}
		Stack {
			SolidFill green {}
			list ["Ordered list", "Foo", "Bar", "Baz"] { ordered; }
		}
	}

	slide SlideDown false => content "Image!" {
		image resUrl / "flower-raw.ppm" { fit; }
	}

	slide Enlarge => Grid {
	expandCol: 0;
	expandCol: 1;
	expandRow: 1;
		Heading "Neat colored boxes!", font, black { colspan: 2; }
		nextLine;
		SolidFill RadialGradient(red, white, Point(320, 240), 300) {}
		SolidFill RadialGradient(green, white, Point(320, 240), 300) {}
	}
}


// Main entry-point for testing.
void test() {
	Test.show();
}
