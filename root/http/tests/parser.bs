use test;
use http;
use core:io;
/*
 * KÃ¶rs mha `Storm -T http`
 */

/* GET */
suite ParseFullGet {
  Buffer teststr = "GET /resources/hello.htm?banana=true&feet=big HTTP/1.1\r\nUser-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)\r\nHost: www.tutorialspoint.com\r\nAccept-Language: en-us\r\nAccept-Encoding: gzip, deflate\r\nConnection: Keep-Alive\r\n\r\n".toUtf8;
  HTTP_Request req = HTTP_Parser.parse_request(teststr);
  test req.method == HTTP_Method:GET;
  test req.path == Url(["resources", "hello.htm"]);
  test req.version == HTTP_Version:HTTP_1_1;
  test req.method_params["banana"] == "true";
  test req.method_params["feet"] == "big";
  test req.headers["User-Agent"] == "Mozilla/4.0 (compatible; MSIE5.01; Windows NT)";
  test req.headers["Host"] == "www.tutorialspoint.com";
  test req.headers["Accept-Language"] == "en-us";
  test req.headers["Accept-Encoding"] == "gzip, deflate";
  test req.headers["Connection"] == "Keep-Alive";
  test req.data.fromUtf8 == "";
}

suite ParseRootPath {
  Buffer teststr = "GET /?key1=val1&key2=val2 HTTP/1.1\r\n\r\n".toUtf8;
  HTTP_Parser parser;
  HTTP_Request req = parser.parse_request(teststr);
  test req.path == Url([]);
  test req.method_params["key1"] == "val1";
  test req.method_params["key2"] == "val2";
}

suite ParseNoHeaders {
  Buffer teststr = "GET /resources/hello.htm?banana=true&feet=big HTTP/1.1\r\n\r\n".toUtf8;
  HTTP_Request req = HTTP_Parser.parse_request(teststr);
  test req.headers.count == 0;
}

suite ParseNoQueryParams {
  Buffer teststr = "GET /resources/hello.htm HTTP/1.1\r\nUser-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)\r\nHost: www.tutorialspoint.com\r\nAccept-Language: en-us\r\nAccept-Encoding: gzip, deflate\r\nConnection: Keep-Alive\r\n\r\n".toUtf8;
  HTTP_Parser parser;
  HTTP_Request req = parser.parse_request(teststr);
  test req.method_params.count == 0;
}

// suite ParseReq09 {
//   Buffer teststr = "GET /resources/hello.htm".toUtf8;
//   HTTP_Request req = HTTP_Parser.parse_request(teststr);
//   test req.method_params.count == 0;
// }

/* Cookie Parsing */
suite ParseCookies {
  Buffer teststr = "GET /resources/hello.htm HTTP/1.1\r\nCookie: sessionId=abc123; theme=light; rememberMe=true\r\n\r\n".toUtf8;
  HTTP_Request req = HTTP_Parser.parse_request(teststr);
  test req.cookies["sessionId"] == "abc123";
  test req.cookies["theme"] == "light";
  test req.cookies["rememberMe"] == "true";
}

suite ParseCookiesNoSpace {
  Buffer teststr = "GET /resources/hello.htm HTTP/1.1\r\nCookie: sessionId=abc123;theme=light;rememberMe=true\r\n\r\n".toUtf8;
  HTTP_Request req = HTTP_Parser.parse_request(teststr);
  test req.cookies["sessionId"] == "abc123";
  test req.cookies["theme"] == "light";
  test req.cookies["rememberMe"] == "true";
}

/* POST */
suite ParseFullPost {
  Buffer teststr = "POST /submit-form HTTP/1.0\r\nUser-Agent: Mozilla/5.0\r\nHost: www.example.com\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 48\r\n\r\nusername=bobbytables&name=robert&city=EAS&age=39".toUtf8;
  HTTP_Parser parser;
  HTTP_Request req = parser.parse_request(teststr);
  test req.method == HTTP_Method:POST;
  test req.path == Url(["submit-form"]);
  test req.version == HTTP_Version:HTTP_1_0;
  test req.method_params.count == 0;
  test req.headers["User-Agent"] == "Mozilla/5.0";
  test req.headers["Host"] == "www.example.com";
  test req.headers["Content-Type"] == "application/x-www-form-urlencoded";
  test req.headers["Content-Length"] == "48";
  test req.data.fromUtf8 == "username=bobbytables&name=robert&city=EAS&age=39";
}
