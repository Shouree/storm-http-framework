use http;
use core:io;

/* TODO(Christoffer): Use the testing framework */
void main(){
  print("Creating Server");
  //HTTP_Server server;
  print("Creating Server");

  HTTP_Parser parser;
  Buffer testbuf;
  testbuf = "GET /resources/hello.htm?banana=true&feet=big HTTP/1.1\r\nUser-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)\r\nHost: www.tutorialspoint.com\r\nAccept-Language: en-us\r\nAccept-Encoding: gzip, deflate\r\nConnection: Keep-Alive\r\n\r\n".toUtf8();

  HTTP_Request req = parser.parse_request(testbuf);
  if (req.method != HTTP_Method:GET) {
    print("TEST FAILED method");
  }
  if (req.path != parsePath("/resources/hello.htm")) {
    print("TEST FAILED path");
  }
  if (req.version != HTTP_Version:HTTP_1_1) {
    print("TEST FAILED version");
  }
  if (req.method_params["banana"] != "true") {
    print("TEST FAILED method_params banana");
  }
  if (req.method_params["feet"] != "big") {
    print("TEST FAILED method_params feet");
  }
  if (req.headers.types[0] != HTTP_Header_Type:User_Agent) {
    print("TEST FAILED header type User-Agent");
  }
  if (req.headers.types[1] != HTTP_Header_Type:Host) {
    print("TEST FAILED header type Host");
  }
  if (req.headers.types[2] != HTTP_Header_Type:Accept_Language) {
    print("TEST FAILED");
  }
  if (req.headers.types[3] != HTTP_Header_Type:Accept_Encoding) {
    print("TEST FAILED");
  }
  if (req.headers.types[4] != HTTP_Header_Type:Connection) {
    print("TEST FAILED");
  }

  print("Creating request");
  HTTP_Request request;
  print("Creating response");
  HTTP_Response response;

  response.status_code = HTTP_StatusCode:OK;

  print("Namespace (tm)");
}
