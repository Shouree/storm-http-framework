use ui;
use layout;
use core:geometry;

class MenuWindow extends Frame {
	init() {
		MenuBar root;

		init("Menu test", Size(300, 100)) {
			root = root;
		}

		PopupMenu help;
		help << Menu:Text("Help") << Menu:Separator() << Menu:Text("About...", &this.showAbout());

		root << Menu:Text("Test") << Menu:Submenu("Help", help);
		menu = root;

		create();
	}

	MenuBar root;

	Bool onClick(Bool pressed, Point at, MouseButton button) : override {
		if (pressed) {
			if (button == MouseButton:left) {
				if (menu)
					menu = null;
				else
					menu = root;
			} else if (button == MouseButton:right) {
				fullscreen = !fullscreen;
			}
		}

		true;
	}

	void showAbout() {
		AboutWindow win;
		Int r = win.show(this);
		print("Result: ${r}");
	}
}

dialog AboutWindow {
	layout Grid {
		expandCol: 0;
		expandRow: 0;

		Edit e() { row: 0; col: 0; colspan: 3; }
		Button close("Close") { row: 1; col: 1; }
		Button ok("OK") { row:1; col: 2; }
	}

	init() {
		init("About", Size(200, 100)) {}

		var me = this;
		close.onClick = (Button b) => me.close(1);
		defaultChoice = ok;
		ok.onClick = (Button b) => me.close(100);
	}
}

void menu() {
	MenuWindow w;
	w.waitForClose;
	print("Done!");
}
