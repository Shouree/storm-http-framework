use lang:bs:effects;
use lang:bs:macro;
use test;

myEffect : effect(Int x)->Int;

MyHandler : handler Int->Float {
	myEffect(Int x), k {
		print("In handler, x = ${x}");
		Float sum = 0;
		for (Int i = 0; i < times; i++) {
			sum += k.call(x + i);
		}
		sum += 0.5;
		print("Returning ${sum}");
		return sum;
	}
	return x {
		print("In return handler: ${x}, ${times}");
		return (x + 1).float;
	}

	Int times;

	init() {
		init { times = 1; }
	}

	init(Int times) {
		init { times = times; }
	}
}

suite Basic {
	Float w = handle {
		Int x = myEffect(1);
		print("x = ${x}");
		Int y = myEffect(x + 100);
		print("y = ${y}");
		y;
	} with MyHandler(2);

	test w == 413.5;
	print("Result: ${w}");
}
