// Really simple syntax, mainly for testing the parser.

DELIMITER : " *" = delim();
DELIMITER => " ";

// Root rule.
Root : Expr e[] = root();
Root : Expr, Root = root();

// Expression
Expr : Expr e[], "\+" op, Expr e[] = operator(e, "+");
Expr : Expr e[], "-" op, Expr e[] = operator(e, "-");
Expr : "[a-z]" v = var();
Expr : "[0-9]" v = nr();

// Root rule with repetitions.
Rep1Root : "{", (Expr e[] - ";",)+ - "}" = foo();
Rep2Root : "{", (Expr e[] - ";",)* - "}" = foo();
Rep3Root : "{", (Expr e[] - ";",)? - "}" = foo();




