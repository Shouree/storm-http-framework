// Really simple syntax, mainly for testing the parser.

DELIMITER => void : " *";

// Root rule.
Root => root() : Expr e[];
Root => root() : Expr, Root;

// Expression
Expr => operator(e, op) : Expr e[], "\+" op, Expr e[];
Expr => operator(e, op) : Expr e[], "-" op, Expr e[];
Expr => var() : "[a-z]+" v;
Expr => nr() : "[0-9]+" v;

// Root rule with repetitions.
Rep1Root => foo() : "{", (Expr e[] - ";",)+ - "}";
Rep2Root => foo() : "{", (Expr e[] - ";",)* - "}";
Rep3Root => foo() : "{", (Expr e[] - ";",)? - "}";




