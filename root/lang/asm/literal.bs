use core:debug;
use core:asm;
use core:lang;

AsmOperand number(Str size, Str value) {
	if (size.equals("b")) {
		byteConst(value.toInt.byte);
	} else if (size.equals("i")) {
		intConst(value.toInt);
	} else if (size.equals("n")) {
		natConst(value.toNat);
	} else if (size.equals("l")) {
		longConst(value.toLong);
	} else if (size.equals("w")) {
		wordConst(value.toWord);
	} else if (size.equals("p")) {
		intPtrConst(value.toInt);
	} else {
		// Fallback.
		intConst(value.toInt);
	}
}


/**
 * Various registers.
 */
AsmOperand rAl() { Operand(al); }
AsmOperand rBl() { Operand(bl); }
AsmOperand rCl() { Operand(cl); }
AsmOperand rEax() { Operand(eax); }
AsmOperand rEbx() { Operand(ebx); }
AsmOperand rEcx() { Operand(ecx); }
AsmOperand rRax() { Operand(rax); }
AsmOperand rRbx() { Operand(rbx); }
AsmOperand rRcx() { Operand(rcx); }
AsmOperand rPtrA() { Operand(ptrA); }
AsmOperand rPtrB() { Operand(ptrB); }
AsmOperand rPtrC() { Operand(ptrC); }
AsmOperand rPtrStack() { Operand(ptrStack); }
AsmOperand rPtrFrame() { Operand(ptrFrame); }
