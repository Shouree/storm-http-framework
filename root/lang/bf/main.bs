use lang;
use lang:bs;
use lang:bs:macro;
use core:lang;
use core:io;
use core:debug;
use core:asm;

// Package reader for BF files.

class Reader extends FilesReader {
	// TODO: We should not need to store this ourselves!
	Package pkg;

	ctor(PkgFiles files, Package into) {
		init(files, into) {
			pkg = into;
		}
	}

	FileReader createFile(Url path) {
		BfFile(path, pkg);
	}
}


class BfFile extends FileReader {
	// TODO: We should not need to store this ourselves!
	Package pkg;
	Url file;

	ctor(Url file, Package into) {
		init(file, into) {
			pkg = into;
			file = file;
		}
	}

	void readFunctions() {
		TextReader reader = readText(file.read());
		print(reader.readAll());

		BfFunction fn(file.title, file);
		print(fn);
		pkg.add(fn);
	}

}

class BfFunction extends Function {

	ctor(Str name, Url file) {
		Value strVal = (name{core:Str}).resolve(rootScope);
		init(strVal, name, [Value: strVal]) {}

		setCode(BfCode(file));
	}
}

class BfCode extends TmpLazyCode {
	Url file;

	ctor(Url file) {
		init() {
			file = file;
		}
	}

	Listing load() {
		Listing r;

		r << prolog();
		print("Generated code!");
		r << epilog();
		r << ret();

		r;
	}
}
