use core.lang;

delimiter = SDelim;

void SDelim();
SDelim : "[ \n\r\t]*";
SDelim : SDelim - "//[^\n\r]*[\n\r]+" #comment;

// Identifier.
Str SIdent();
SIdent => v : "[A-Za-z_][A-Za-z0-9_]*" v;

// Type names.
NamePart SNamePart();
SNamePart => SimplePart(name) : SIdent name;
SNamePart => SimplePart(name) : SIdent name, "<", ">";
SNamePart => RecPart(name) : SIdent name, "<", SName -> add, (",", SName -> add, )* ">";

SrcName SName();
SName => SrcName(pos) : SNamePart -> add #typeName (, "\.", SNamePart -> add #typeName)*;

void SRoot();
SRoot : SDelim - (SFileItem, ";", )*;

void SFileItem();
SFileItem : "use" #keyword, SName #typeName;
SFileItem : "delimiter" #keyword, "=", SName #typeName;
SFileItem : SName #typeName, SIdent #fnName, SFormals;
SFileItem : SProd, ("=>", SExpr,)? ":", STokens, SProdName;

void SFormals();
SFormals : "(", ")";
SFormals : "(", SName #typeName, SIdent #varName, (",", SName #typeName, SIdent #varName,)* ")";

void SProd();
SProd : SName - (, "\[", "\-?[0-9]+" #constant, "\]")?;

void SProdName();
SProdName : "=", SIdent #typeName;
SProdName : ;

void STokens();
STokens : (SRepToken,)*;

void SRepToken();
SRepToken : "(", (SToken,)* ")" - SRep, SCapture;
SRepToken : SToken;

void SToken();
SToken : SString, SCapture, SHilight;
SToken : SName, SCapture, SHilight;
SToken : SName, SActuals, SCapture, SHilight;
SToken : "-";
SToken : ",";

void SActuals();
SActuals : "(", ")";
SActuals : "(", SIdent #varName, (",", SIdent #varName,)* ")";

void SRep();
SRep : "\*";
SRep : "\+";
SRep : "\?";

void SCapture();
SCapture : ("@",)? "->", SIdent;
SCapture : ("@",)? SIdent;

void SHilight();
SHilight : "#" #keyword - SIdent #keyword;

void SStrContent();
SStrContent : "[^\"\\]*"; // All except end of string and backslash.
SStrContent : SStrContent - "\\." - SStrContent; // Gobble escape sequences (we could translate them here...)

Str SString();
SString => s : "\"" #string - (SStrContent #string) s - "\"" #string;

void SExpr();
SExpr : SName, SActuals;
SExpr[10] : "true" #keyword;
SExpr[10] : "false" #keyword;
// Constants?