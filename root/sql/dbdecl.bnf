use lang.bs;
use core.lang;

optional delimiter = lang.bs.SDelimiter;
required delimiter = lang.bs.SRequiredDelimiter;

// This file contains the table declarations of the SQL plugin.

// TODO: We should maybe provide "sql name" token to allow for names with spaces in them.

// The top-level table declaration.
SPlainFileItem => DatabaseDecl(name, env, contents) : "DATABASE" ~ lang.bs.SName name, "{" [, SDatabase contents, ]+ "}";


// Contents of a database.
Database SDatabase();
SDatabase => Database() : (SDBItem(me),)*;

// An item in a DB declaration.
void SDBItem(Database to);
SDBItem => to : STable -> add;
// More here!

// Declaration of a single table.
Table STable();
STable => Table(name, columns) : "TABLE" ~ SName name, "(" [, SColumns columns, ]+ ")", ";";

// Column declarations.
Array<Column> SColumns();
SColumns => Array<Column>() : SColumn -> push - (, ",", SColumn -> push)*;

Column SColumn();
SColumn => Column(name, type, modifiers) : SName name ~ SDataType type -(~ SModifier modifiers)*;


// Data types in table declarations.
SQLType SDataType() #typeName;
SDataType => sqlInteger() : "INTEGER";
SDataType => sqlReal() : "REAL";
SDataType => sqlText() : "TEXT";


// Modifiers for columns.
Str SModifier() #keyword;
SModifier => t : "PRIMARY KEY" t;
SModifier => t : "FOREIGN KEY" t;
SModifier => t : "NOT NULL" t;
SModifier => t : "UNIQUE" t;
SModifier => t : "AUTOINCREMENT" t;

