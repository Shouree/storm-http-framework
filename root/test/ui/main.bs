use ui;
use core:geometry;
use core:debug;

class MainPainter extends Painter {
	SolidBrush brush;
	SolidBrush brush2;
	LinearGradient brush3;
	Moment started;

	ctor() {
		init() {
			brush = red;
			brush2 = blue;
			brush3([GradientStop(0, red), GradientStop(1, green)], Point(0, 0), Point(1, 1));
		}
	}

	Bool render(Size size, Graphics g) {
		Point from(0, 0);
		Point to(size.w, size.h);
		Size border = 10;

		g.line(from, to, brush);
		g.line(Point(0, size.h), Point(size.w, 0), brush2);
		g.fillOval(Rect(from + border, to - border), brush3);

		Moment now;
		Float y = (now - started).inMs.float / 50.0;
		g.line(Point(0, y), Point(size.w, y), brush);

		true;
	}
}

class MainWin extends Frame {
	Label lbl;
	Edit input;
	Button btn;

	ctor() {
		init("Test window") {
			lbl("Name:");
			input("Your name");
			btn("Click me!");
		}
		size(Size(200, 200));

		add(lbl);

		input.onReturn = &this->enterPressed(Edit);
		add(input);

		btn.onClick = &this->btnClicked(Button);
		add(btn);

		painter(MainPainter());

		create();
	}

	void resized(Size s) {
		Size border = 8;
		Point w = border;
		Size sz = s - 2*border;

		lbl.pos(Rect(w, Size(sz.w, 20)));
		w.y = w.y + 28;
		sz.h = sz.h - 28;

		input.pos(Rect(w, Size(sz.w, 20)));
		w.y = w.y + 28;
		sz.h = sz.h - 28;

		btn.pos(Rect(w, Size(sz.w, 20)));
	}

	void btnClicked(Button btn) {
		btn.text("Well done: " + input.text);
	}

	void enterPressed(Edit edit) {
		btn.text("Well edited: " + input.text);
	}
}

thread Waiter;

void closeLater(MainWin w) on Waiter {
	dbgSleep(6000);
	w.close;
}

void main() {
	MainWin win;
	spawn closeLater(win);
	win.waitForClose;
}
