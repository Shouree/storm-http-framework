// Syntax for debugging...
use lang.bs;

delimiter = SDelimiter;

SStmt => dumpExpr(e, str) : "dump:", ( SExpr(block) e ) str, ";";

// Weak parens.
SAtom => z : "#(", SExpr(block) z, ")#";

// Operators with different associativity
SOperator => lang.bs.rOperator(op, 900) : "#" - "\*"@ op - "#";
SOperator => lang.bs.rOperator(op, 800) : "#" - "\+"@ op - "#";
SOperator => lang.bs.rOperator(op, 800) : "#" - "\-"@ op - "#";


SExpr => patternExpr(block, expr) : "p!" - SExpr(block) expr - "!p";
SExpr => patternSpliceExpr(block, expr) : "s!" - SExprList(block) expr - "!s";

Array<Expr> SExprList(Block block);
SExprList => Array<Expr>() : SExpr(block) -> push - (, ",", SExpr(block) -> push)*;
