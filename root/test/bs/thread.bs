use core;
use core:debug;

// Declare a named thread. Threads are a special kind of global variables, since
// the compiler have to impose stricter checks on threads compared to regular global
// variables. For example, a named thread may not mutate like a global variable may do
// in some cases during updates. This would break thread-safety.
thread Other;

// Should be able to access threads as regular values.
Thread getThread() {
	Other;
}

Thread getCompilerThread() {
	Compiler;
}

Int postInt() {
	otherIntFn(1);
}

Int otherIntFn(Int v) on Other {
	8 + v;
}

Int postDbgVal() {
	DbgVal val(10);
	otherDbgValFn(val);
}

Int otherDbgValFn(DbgVal v) on Other {
	8 + v.get;
}

Int postObject() {
	CloneDerived d;
	CloneDerived z = otherObjectFn(d);
    // Should be 13. d is copied 2 times.
	z.c;
}

CloneDerived otherObjectFn(CloneDerived o) on Other {
	o.c = o.c + o.a + o.b.get;
	o;
}

// Try with a value as well!

