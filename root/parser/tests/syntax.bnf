optional delimiter = OSep;
required delimiter = RSep;

void OSep();
OSep : "[ \n\r\t]*";

void RSep();
RSep : "[ \n\r\t]+";


// Simple list to test LR parser.
Array<Str> List();
List => Array<Str>() : Item -> push, ListTail(me);
// List => Array<Str>() : ListRec;

void ListTail(Array<Str> x);
ListTail : ;
ListTail => x : ",", Item -> push, ListTail(x);

void ListRec();
ListRec : List;

Str Item();
Item => v : "[A-Z]+" v;

// This is not reachable from 'List' and should therefore be removed.
void Unreachable();
Unreachable : Item - "INCORRECT";


// Repetition statements.
Array<Str> RepList();
RepList => Array<Str>() : "\[", (Item -> push, ",",)* "\]";
RepList => elems : "{", (Item elems, ",", )+ "}";

// Optional statements.
Maybe<Str> Optional();
Optional => x : "=", (Item x)?;

// Captures.
Str Capture();
Capture => x : "\[", (List) x, "\]";
Capture => x : "z", (List) x;
